/**
 * Represents a repeated nested node element
 * Example :
 * <ul>
 *     <li>
 *         <ul><!-- This is a repeater --></ul>
 *     <li>
 * </ul>
 */
export interface IPioneerTreeRepeater {
    /**
     * Flipped on pioneer-tree-collapse click
     */
    collapsed: boolean;

    /**
     * Get UID of repeater
     * Generated by model at init
     */
    getId(): string;

    /**
     * Get collection of style to set on ngStyle
     */
    getStyles(): IPioneerTreeRepeaterStyles;

    /**
     * Get collection of classes to set on ngClass
     */
    getClasses(): string[];
}

/**
 * Track dynamic styling for a repeater object
 */
export interface IPioneerTreeRepeaterStyles {
    display: string;
}

export class PioneerTreeRepeater implements IPioneerTreeRepeater {
    collapsed = false;
    private uid: string;

    constructor() {
        this.generateUid();
    }

    getStyles(): IPioneerTreeRepeaterStyles {
        return {
            display: this.collapsed ? 'none' : 'block'
        } as IPioneerTreeRepeaterStyles;
    }

    getClasses(): string[] {
        const classes = [] as string[]

        if (this.collapsed) {
            classes.push('pt-repeater-collapsed')
        }

        return classes;
    }

    getId(): string {
        return this.uid
    }

    private generateUid(): void {
        this.uid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
            return v.toString(16);
        });
    }
}