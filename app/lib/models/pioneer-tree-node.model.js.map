{"version":3,"file":"pioneer-tree-node.model.js","sourceRoot":"","sources":["pioneer-tree-node.model.ts"],"names":[],"mappings":"AACA,OAAO,EAAwB,mBAAmB,EAAE,MAAM,+BAA+B,CAAA;AAsBzF;IAMI,yBAAoB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;QACvD,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAA;IACxD,CAAC;IAED,+BAAK,GAAL;QACI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAA;IACnB,CAAC;IAED,2CAAiB,GAAjB;QACI,IAAM,OAAO,GAAG,EAAc,CAAA;QAE9B,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YACjE,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;QACpC,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEO,qCAAW,GAAnB;QACI,IAAI,CAAC,GAAG,GAAG,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC;YAC1E,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACnE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,sBAAC;AAAD,CAAC,AA/BD,IA+BC","sourcesContent":["import { PioneerTreeService, IPioneerTreeService } from \"../services/pioneer-tree.service\"\r\nimport { IPioneerTreeRepeater, PioneerTreeRepeater } from \"./pioneer-tree-repeater.model\"\r\n\r\nexport interface IPioneerTreeNode {\r\n    /**\r\n     * Get UID of node\r\n     * Generated by model at init\r\n     */\r\n    getId(): string;\r\n\r\n\r\n    /**\r\n     * Get collection of content classes to set on ngClass\r\n     */\r\n    getContentClasses(): string[];\r\n\r\n    /**\r\n     * A repeater lives inside a node\r\n     * this is the node id\r\n     */\r\n    pioneerTreeRepeater: IPioneerTreeRepeater;\r\n}\r\n\r\nexport class PioneerTreeNode implements IPioneerTreeNode {\r\n\r\n    pioneerTreeRepeater: IPioneerTreeRepeater;\r\n\r\n    private uid: string;\r\n\r\n    constructor(private pioneerTreeService: IPioneerTreeService) {\r\n        this.generateUid();\r\n        this.pioneerTreeRepeater = new PioneerTreeRepeater()\r\n    }\r\n\r\n    getId(): string {\r\n        return this.uid\r\n    }\r\n\r\n    getContentClasses(): string[] {\r\n        const classes = [] as string[]\r\n\r\n        if (this.pioneerTreeService.currentSelectedNodeId === this.getId()) {\r\n            classes.push('pt-node-selected')\r\n        }\r\n\r\n        return classes;\r\n    }\r\n\r\n    private generateUid(): void {\r\n        this.uid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n}"]}