{"version":3,"file":"pioneer-tree.component.js","sourceRoot":"","sources":["pioneer-tree.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAwC,MAAM,eAAe,CAAC;AAEvF,OAAO,EAAE,wBAAwB,EAAE,MAAM,kDAAkD,CAAA;AAC3F,OAAO,EAAE,4BAA4B,EAAE,MAAM,0DAA0D,CAAA;AAEvG,OAAO,EAAE,eAAe,EAAE,MAAM,sCAAsC,CAAA;AAItE,OAAO,EAAE,kBAAkB,EAAuB,MAAM,qCAAqC,CAAA;AAc7F,IAAa,oBAAoB;IAG/B,8BAAoB,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;IAC1D,CAAC;IAED;;;;;;;;OAQG;IACH,0CAAW,GAAX,UAAY,OAAY;QAAxB,iBAOC;QANC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,CAA2B;YACtD,CAAC,CAAC,eAAe,GAAG,IAAI,eAAe,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;YACjE,MAAM,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;IACL,CAAC;IACH,2BAAC;AAAD,CAAC,AAvBD,IAuBC;AAtBU;IAAR,KAAK,EAAE;;mDAAmC;AADhC,oBAAoB;IAZhC,SAAS,CAAC;QACT,QAAQ,EAAE,2DAA2D;QACrE,QAAQ,EAAE,iFAIT;QACD,eAAe,EAAE;YACf,wBAAwB;YACxB,4BAA4B;SAC7B;KACF,CAAC;qCAIwC,kBAAkB;GAH/C,oBAAoB,CAuBhC;SAvBY,oBAAoB","sourcesContent":["import { Component, Input, ViewChild, TemplateRef, ContentChild } from '@angular/core';\r\n\r\nimport { PioneerTreeNodeComponent } from '../pioneer-tree-node/pioneer-tree-node.component'\r\nimport { PioneerTreeCollapseComponent } from '../pioneer-tree-collapse/pioneer-tree-collapse.component'\r\n\r\nimport { PioneerTreeNode } from \"../../models/pioneer-tree-node.model\"\r\nimport { PioneerTreeRepeater } from \"../../models/pioneer-tree-repeater.model\"\r\nimport { IPioneerTreeExpandedNode } from \"../../models/pioneer-tree-expanded-node.model\"\r\n\r\nimport { PioneerTreeService, IPioneerTreeService } from \"../../services/pioneer-tree.service\"\r\n\r\n@Component({\r\n  selector: '[pioneer-tree],[pioneer-tree-repeater],[pt],[pt-repeater]',\r\n  template: `\r\n  <span class=\"pioneer-tree\">\r\n    <ng-content></ng-content>\r\n  </span>\r\n  `,\r\n  entryComponents: [\r\n    PioneerTreeNodeComponent,\r\n    PioneerTreeCollapseComponent\r\n  ]\r\n})\r\nexport class PioneerTreeComponent {\r\n  @Input() nodes: IPioneerTreeExpandedNode[];\r\n\r\n  constructor(private pioneerTreeService: PioneerTreeService) {\r\n  }\r\n\r\n  /**\r\n   * TODO: Keep an eye on this to understand the in-memory values \r\n   *  coming from this.nodes and this.pioneerTreeService.nodes\r\n   * \r\n   * TODO: Keep an eye on this to understand the update life cycle.\r\n   *  If argument model is updated, do we loose all tracking because we are\r\n   *  resetting nodes from the map\r\n   * @param changes \r\n   */\r\n  ngOnChanges(changes: any) {\r\n    if (!this.nodes) return;\r\n\r\n    this.nodes = this.nodes.map((x: IPioneerTreeExpandedNode) => {\r\n      x.pioneerTreeNode = new PioneerTreeNode(this.pioneerTreeService);\r\n      return x;\r\n    });\r\n  }\r\n}"]}